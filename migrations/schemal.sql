-- 1. Enable the vector extension (if not already enabled)
CREATE EXTENSION IF NOT EXISTS vector;

-- 2. Create the products table
CREATE TABLE IF NOT EXISTS public.products (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL,
    variant TEXT,
    image_url TEXT,
    clip_embedding VECTOR(512), -- Adjust 512 if your CLIP model's dimension is different
    created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- 3. Create an index on the clip_embedding column for faster similarity search
-- Note: Choose the index type that best suits your needs.
-- IVFFlat is good for a balance of speed and accuracy but requires NPROBES at query time.
-- HNSW is generally faster for querying and more accurate but can be slower to build.
-- For IVFFlat, the number of lists (e.g., 100) depends on your dataset size.
-- A common starting point for lists: sqrt(number_of_rows) for up to 1M rows, number_of_rows / 1000 for larger.
-- You might need to experiment.
DROP INDEX IF EXISTS products_clip_embedding_ivfflat_idx; -- Drop if it exists from a previous attempt
CREATE INDEX products_clip_embedding_ivfflat_idx ON public.products USING ivfflat (clip_embedding vector_cosine_ops) WITH (lists = 100);

-- Alternatively, for HNSW (often preferred for pgvector >= 0.5.0):
-- DROP INDEX IF EXISTS products_clip_embedding_hnsw_idx;
-- CREATE INDEX products_clip_embedding_hnsw_idx ON public.products USING hnsw (clip_embedding vector_cosine_ops);

-- 4. Drop the old function IF IT EXISTS with the specified signature, then recreate it.
-- The types (vector, double precision, integer) must match the existing function's arguments.
DROP FUNCTION IF EXISTS public.match_products(vector, double precision, integer);

-- Create the function to match products based on embedding similarity
CREATE OR REPLACE FUNCTION public.match_products (
  query_embedding VECTOR(512), -- Must match the dimension of clip_embedding in the products table
  match_threshold FLOAT,       -- This corresponds to double precision
  match_count INT              -- This corresponds to integer
)
RETURNS TABLE (
  id BIGINT,
  name TEXT,
  variant TEXT,
  image_url TEXT,
  clip_embedding VECTOR(512), -- Must match the dimension
  created_at TIMESTAMPTZ,
  similarity FLOAT
)
LANGUAGE sql STABLE PARALLEL SAFE -- Added PARALLEL SAFE for potential query optimization
AS $$
  SELECT
    p.id,
    p.name,
    p.variant,
    p.image_url,
    p.clip_embedding,
    p.created_at,
    1 - (p.clip_embedding <=> query_embedding) AS similarity -- <=> is the cosine distance operator
  FROM
    public.products p
  WHERE
    1 - (p.clip_embedding <=> query_embedding) > match_threshold
  ORDER BY
    similarity DESC
  LIMIT
    match_count;
$$; 